@using bouvet_fagkaffe_frontend.Components.Elements
@inject Operations _operations
@inject NavigationManager _navigation
@rendermode InteractiveServer
@page "/admin/candidates"

@if (user != null && user.IsAdmin) 
{
    <div class="container">
        <div class="row">
            <div class="btn-group">
                <button class="btn btn-primary" @onclick="MoveToAdmin">Admin</button>
                <button class="btn btn-secondary" disabled>Candidates</button>
                <button class="btn btn-primary" @onclick="MoveToLectures">Unplanned lectures</button>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                @if (candidates != null && candidates.Count() > 0)
                {
                    <div class="container">
                        <div class ="row row-cols-2">
                        @foreach (var candidate in candidates)
                        {
                            @if (candidate.Status == CandidateStatus.Submitted)
                            {
                                <div class="col">
                                    <CandidateComp candidate="@candidate"
                                                   user="@user"
                                                   isAdminView="@isAdminView">
                                    </CandidateComp>
                                </div>
                            }
                        }
                        </div>
                    </div>
                }
                else if (candidates != null && candidates.Count() == 0)
                {
                    <p>There are currently no candidates to display</p>
                }
                else
                {
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
else
{
    <p>Unauthorized</p>
}

@code {
    [CascadingParameter]
    private User? user { get; set; }

    private List<Candidate>? candidates { get; set; }

    private bool isAdminView = true;

    protected override async Task OnInitializedAsync()
    {
        if (user != null && user.Groups != null)
        {
            candidates = await _operations.GetAllCandidatesByDepartments(user.Groups);
        }
        await base.OnInitializedAsync();
    }

    private void MoveToLectures()
    {
        _navigation.NavigateTo("admin/lectures", true);
    }

    private void MoveToAdmin()
    {
        _navigation.NavigateTo("admin", true);
    }
}
