@using bouvet_fagkaffe_frontend.Components.Elements
@inject Operations _operations
@inject NavigationManager _navigation
@rendermode InteractiveServer
@page "/admin/lectures"

@if (user != null && user.IsAdmin) 
{
    <div class="container">
        <div class="row">
            <div class="btn-group">
                <button class="btn btn-primary" @onclick="MoveToAdmin">Admin</button>
                <button class="btn btn-primary" @onclick="MoveToCandidates">Candidates</button>
                <button class="btn btn-secondary" disabled>Unplanned lectures</button>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                @if (lectures != null && lectures.Count() > 0)
                {
                    <div class="container">
                        <div class="row row-cols-2">
                            @foreach (var lecture in lectures)
                            {
                                @if (lecture.Status == LectureStatus.Accepted)
                                {
                                    <div class="col">
                                        <LectureComp lecture="@lecture"
                                                     isAdminOrHomeView="@isAdminView"
                                                     user="@user">
                                        </LectureComp>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                }
                else if (lectures != null && lectures.Count() == 0)
                {
                    <p>There are currently no lectures to display</p>
                }
                else
                {
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
else
{
    <p>Unauthorized</p>
}


@code {
    [CascadingParameter]
    private User? user { get; set; }
    private List<Lecture>? lectures { get; set; }
    private bool isAdminView = true;

    protected override async Task OnInitializedAsync()
    {
        if (user != null && user.Groups != null)
        {
            lectures = await _operations.GetAllLecturesByDepartments(user.Groups);
        }
        await base.OnInitializedAsync();
    }

    private void MoveToCandidates()
    {
        _navigation.NavigateTo("admin/candidates", true);
    }

    private void MoveToAdmin()
    {
        _navigation.NavigateTo("admin", true);
    }
}
