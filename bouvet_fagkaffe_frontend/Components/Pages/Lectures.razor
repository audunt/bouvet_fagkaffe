@using bouvet_fagkaffe_frontend.Components.Elements
@inject Operations _operations
@rendermode InteractiveServer
@page "/lectures"

<h3>Lectures</h3>
<br />
<div class="container">
    <div class="row">
        <div class="col-12">
            <h5>All lectures in your department</h5>
            <div class="container">
                <div class="row row-cols-2">
                @if (departmentLectures != null && departmentLectures.Count() > 0)
                {
                    @foreach (var lecture in departmentLectures)
                    {
                        <div>
                            <LectureComp lecture=@lecture>

                            </LectureComp>
                            <br />
                        </div>
                    }
                }
                else if (departmentLectures != null && departmentLectures.Count() == 0)
                {
                    <p>There are no lectures to display</p>
                }
                else
                {
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    private User? user { get; set; }

    private List<Lecture>? departmentLectures { get; set; }
    private List<Lecture>? openLectures { get; set; }


    protected override async Task OnInitializedAsync()
    {
        if (user != null)
            departmentLectures = await _operations.GetAllDisplayLecturesForUser(user);

        await base.OnInitializedAsync();
    }
}
